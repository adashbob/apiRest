<?php

namespace ApiUserBundle\Entity;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Security\Core\Role\RoleInterface;

/**
 * Profil
 *
 * @ORM\Table(name="role")
 * @ORM\Entity(repositoryClass="ApiUserBundle\Repository\RoleRepository")
 */
class Role implements RoleInterface
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="role", type="string", unique=true, length=100)
     */
    private $role;

   /**
    * @ORM\ManyToMany(targetEntity="ApiUserBundle\Entity\User", mappedBy="roles")
    */
   protected $users;

   /**
    * Profil constructor.
    * @param $role
    */
   public function __construct($role)
   {
      $this->role = $role;
      $this->users = new ArrayCollection();
   }

    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

   /**
    * Returns the role.
    *
    * This method returns a string representation whenever possible.
    *
    * When the role cannot be represented with sufficient precision by a
    * string, it should return null.
    *
    * @return string|null A string representation of the role, or null
    */
   public function getRole()
   {
      // TODO: Implement getRole() method.
   }
}
